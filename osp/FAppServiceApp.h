//
// Open Service Platform
// Copyright (c) 2012 Samsung Electronics Co., Ltd.
//
// Licensed under the Apache License, Version 2.0 (the License);
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

/**
 * @file	FAppServiceApp.h
 * @brief	This is the header file for the %ServiceApp class.
 *
 * This header file contains the declarations of the %ServiceApp class.
 */

#ifndef _FAPP_SERVICE_APP_H_
#define _FAPP_SERVICE_APP_H_

#include <FAppApp.h>

namespace Tizen { namespace Base { namespace Collection { class IList; } } }

namespace Tizen { namespace App
{

class ServiceApp;

typedef ServiceApp* (*ServiceAppInstanceFactory)(void);

/**
 * @class	ServiceApp
 * @brief	This class is the base class of a %Tizen native service application.
 *
 * @since	2.0
 *
 * The %ServiceApp class is the base class of a %Tizen native service application which has no UI.
 * A %Tizen native service application must inherit from the %ServiceApp class. This class provides the basic features necessary to define the
 * %Tizen native service application.
 * @n
 * For more information on the class features, see <a href="../org.tizen.native.appprogramming/html/guide/app/app_namespace.htm">App Guide</a> and <a href="../org.tizen.native.appprogramming/html/basics_tizen_programming/tizen_app_model/application_model.htm">Native Application Model</a>.
 *
 */
class _OSP_EXPORT_ ServiceApp
	: public Tizen::App::App
{
public:
	/**
	 * This destructor overrides Tizen::Base::Object::~Object().
	 *
	 * @since	2.0
	 */
	virtual ~ServiceApp(void);

	/**
	* Gets the %ServiceApp instance's pointer.
	*
	* @since	2.0
	*
	* @return	A pointer to the %ServiceApp instance, @n
	*			else @c null if it fails
	*/
	static ServiceApp* GetInstance(void);

	/**
	 * Executes an application implemented by inheriting this class.
	 * This method must be called from the entry method - OspMain(), which is generated by IDE.
	 *
	 * @since	2.0
	 *
	 * @return		An error code
	 * @param[in]	pServiceAppFactory         The factory method that creates this %ServiceApp's instance
	 * @param[in]	pArguments           The launch arguments for %App
	 * @exception	E_SUCCESS           The method is successful.
	 * @exception	E_INVALID_ARG       A specified input parameter is invalid.
	 * @exception	E_OUT_OF_MEMORY     The memory is insufficient.
	 * @exception	E_INIT_FAILED       The initialization failure during OnAppInitializing().
	 * @exception	E_SYSTEM            A system error has occurred.
	 */
	static result Execute(ServiceAppInstanceFactory pServiceAppFactory, const Tizen::Base::Collection::IList* pArguments);

protected:
	/**
	 * This is the default constructor for this class.
	 *
	 * @since	2.0
	 */
	ServiceApp(void);

	//
	// This method is for internal use only.
	// Using this method can cause behavioral, security-related, and consistency-related issues in the application.
	//
	// The following methods are reserved and the name of the methods can be changed at any time without prior notice.
	//
	// @since	2.0
	//
	virtual void ServiceApp_Reserved1(void) {}

	//
	// This method is for internal use only.
	// Using this method can cause behavioral, security-related, and consistency-related issues in the application.
	//
	// The following methods are reserved and the name of the methods can be changed at any time without prior notice.
	//
	// @since	2.0
	//
	virtual void ServiceApp_Reserved2(void) {}

	//
	// This method is for internal use only.
	// Using this method can cause behavioral, security-related, and consistency-related issues in the application.
	//
	// The following methods are reserved and the name of the methods can be changed at any time without prior notice.
	//
	// @since	2.0
	//
	virtual void ServiceApp_Reserved3(void) {}

private:
	/**
	 * The implementation of this copy constructor is intentionally blank and declared as private to prohibit copying of objects.
	 *
	 * @since	2.0
	 */
	ServiceApp(const ServiceApp& rhs);

	/**
	 * The implementation of this copy assignment operator is intentionally blank and declared as private to prohibit copying of objects.
	 *
	 * @since	2.0
	 */
	ServiceApp& operator =(const ServiceApp& rhs);

private:
	class _ServiceAppImpl* __pServiceAppImpl;
}; // ServiceApp

typedef ServiceApp Service;

} } // Tizen::App

#endif // _FAPP_SERVICE_APP_H_
